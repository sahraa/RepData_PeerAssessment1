which(is.na(AC$steps))
sum(is.na(AC$steps))
sum(is.na(AC$steps))
ActiviyNew  <- group_by(AC$interval) %>%
mutate(steps = ifelse(is.na(steps), mean(steps, na.rm=TRUE),steps))
sum(is.na(AC$steps))
ActivityNew <- group_by(AC$interval)
ActiviyNew  <-  mutate(ActivityNew$steps = ifelse(is.na(ActivityNew$steps), mean(ActivityNew$steps, na.rm=TRUE),ActivityNew$steps))
library(dplyr)
sum(is.na(AC$steps))
ActivityNew <- group_by(AC$interval)
ActiviyNew  <-  mutate(ActivityNew$steps = ifelse(is.na(ActivityNew$steps), mean(ActivityNew$steps, na.rm=TRUE),ActivityNew$steps))
View(TStep)
sum(is.na(AC$steps))
new <- AC %>%
group_by(interval) %>%
mutate(steps = ifelse(is.na(steps), mean(steps, na.rm=TRUE), steps))
View(new)
rm(new)
rm()
View(AC)
sum(is.na(AC$steps))
ActivityNew <- AC %>% group_by(date) %>%
mutate(steps = ifelse(is.na(steps), mean(steps, na.rm=TRUE), steps))
View(AC)
View(TStep)
sum(is.na(AC$steps))
ActivityNew <- AC %>% group_by(interval) %>%
mutate(steps = ifelse(is.na(steps), mean(steps, na.rm=TRUE), steps))
View(ActivityNew)
TStepNew <- aggregate(steps~date,ActivityNew,FUN=sum)
TStepNew <- aggregate(steps~date,ActivityNew,FUN=sum)
hist(TStepNew$steps,col="pink",xlab="Total Number of Steps", main="Histogram of Total Number of Steps/Day for New Activity Data")
TStepNew <- aggregate(steps~date,ActivityNew,FUN=sum)
hist(TStepNew$steps,col="pink",xlab="Total Number of Steps", main="Histogram of Total Number of Steps/Day for New Activity Data Set")
TStepNew <- aggregate(steps~date,ActivityNew,FUN=sum)
hist(TStepNew$steps,col="pink",xlab="Total Number of Steps", main="Histogram of Total Number of Steps/Day for New Activity Data Set")
summary(TStepNew)
TStepNew <- aggregate(steps~date,ActivityNew,FUN=sum)
par(mfrow(2,1))
hist(TStep$steps,col="pink",xlab="Total Number of Steps", main="Histogram1: of Total Number of Steps/Day")
hist(TStepNew$steps,col="pink",xlab="Total Number of Steps", main="Histogram2: of Total Number of Steps/Day for New Activity Data Set")
summary(TStepNew)
TStepNew <- aggregate(steps~date,ActivityNew,FUN=sum)
par(mfrow=(2,1))
hist(TStep$steps,col="purple",xlab="Total Number of Steps", main="Histogram1: of Total Number of Steps/Day")
hist(TStepNew$steps,col="pink",xlab="Total Number of Steps", main="Histogram2: of Total Number of Steps/Day for New Activity Data Set")
summary(TStepNew)
TStepNew <- aggregate(steps~date,ActivityNew,FUN=sum)
par(mfrow=(2,1))
hist(TStep$steps,col="purple",xlab="Total Number of Steps", main="Histogram1: of Total Number of Steps/Day")
hist(TStepNew$steps,col="pink",xlab="Total Number of Steps", main="Histogram2: of Total Number of Steps/Day for New Activity Data Set")
##summary(TStepNew)
TStepNew <- aggregate(steps~date,ActivityNew,FUN=sum)
par(mfrow=(2 1))
hist(TStep$steps,col="purple",xlab="Total Number of Steps", main="Histogram1: of Total Number of Steps/Day")
hist(TStepNew$steps,col="pink",xlab="Total Number of Steps", main="Histogram2: of Total Number of Steps/Day for New Activity Data Set")
##summary(TStepNew)
TStepNew <- aggregate(steps~date,ActivityNew,FUN=sum)
par(mfrow=(2, 1))
hist(TStep$steps,col="purple",xlab="Total Number of Steps", main="Histogram1: of Total Number of Steps/Day")
hist(TStepNew$steps,col="pink",xlab="Total Number of Steps", main="Histogram2: of Total Number of Steps/Day for New Activity Data Set")
##summary(TStepNew)
TStepNew <- aggregate(steps~date,ActivityNew,FUN=sum)
par(mfrow=c(2,1))
hist(TStep$steps,col="purple",xlab="Total Number of Steps", main="Histogram1: of Total Number of Steps/Day")
hist(TStepNew$steps,col="pink",xlab="Total Number of Steps", main="Histogram2: of Total Number of Steps/Day for New Activity Data Set")
##summary(TStepNew)
```
rm(AC)
rm(ActivityNew)
---
TStep <- aggregate(steps~date, data=AC, FUN=sum, na.rm=TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
setwd("C:/Users/y.amini/Desktop/rprog/Reproducible Research/Q2")
AC <- read.csv("activity.csv", stringsAsFactors=FALSE)
TStep <- aggregate(steps~date, data=AC, FUN=sum, na.rm=TRUE)
hist(TStep$steps,col="pink",xlab="Total Number of Steps", main="Histogram of Total Number of Steps/Day")
##summary(TStep, na.rm=TRUE)
meansteps = mean(TStep$steps)
mediansteps = median(TStep$steps)
abline(v= meansteps, col="red",lty= 1, lwd=5)
abline(v= mediansteps, col="blue",lty=2, lwd = 3)
summary(TStep)
weekdays(as.date(AC[1,1]))
library(date)
library("date"")
weekdays(as.date(AC[1,1]))
weekdays(as.date(AC[1,1]))
library("date")
install.packages("date")
library("date")
weekdays(as.date(AC[1,1]))
as.date(AC[1,1])
as.date(AC[2,1])
View(AC)
as.date(AC[2,2])
as.date(AC[2,1])
as.date(AC[2,3])
weekdays(as.date(AC[1,3]))
weekEndData <- function(date) {
if (weekdays(as.Date(date)) %in% c("Saturday", "Sunday")) {
"weekend"
} else {"weekday" }}
##ActivityNew$daytype <- as.factor(sapply(new$date, dayofweek))
View(weekEndData)
data(AC[1,3])
data(AC)
weekEndData <- function(date) {
if (weekdays(as.Date(date)) %in% c("Saturday", "Sunday")) {
"weekend"
} else {"weekday" }}
ActivityNew$daytype <- as.factor(sapply(ActivityNew$date, weekEndData))
ActivityNew$daytype <- as.factor(sapply(ActivityNew$date, weekEndData))
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
setwd("C:/Users/y.amini/Desktop/rprog/Reproducible Research/Q2")
AC <- read.csv("activity.csv", stringsAsFactors=FALSE)
TStep <- aggregate(steps~date, data=AC, FUN=sum, na.rm=TRUE)
TStep <- aggregate(steps~date, data=AC, FUN=sum, na.rm=TRUE)
hist(TStep$steps,col="pink",xlab="Total Number of Steps", main="Histogram of Total Number of Steps/Day")
##summary(TStep, na.rm=TRUE)
meansteps = mean(TStep$steps)
mediansteps = median(TStep$steps)
abline(v= meansteps, col="red",lty= 1, lwd=5)
abline(v= mediansteps, col="blue",lty=2, lwd = 3)
summary(TStep)
FiveminAvr <- aggregate(steps~interval, data=AC, FUN=mean, na.rm=TRUE)
names(FiveminAvr) = c("interval","AverageSteps")
plot(x = FiveminAvr$interval, y = FiveminAvr$AverageSteps, type = "l",xlab="5 minute intervals", ylab="Average per day", col="purple")
maxfive <- max(FiveminAvr$AverageSteps)
maxfiveinterval <- FiveminAvr[which.max(FiveminAvr$AverageSteps),]
abline(v= maxfiveinterval[1,1], col="red")
names(maxfiveinterval) = c("Max interval","AverageSteps")
maxfiveinterval
sum(is.na(AC$steps))
ActivityNew <- AC %>% group_by(interval) %>%
mutate(steps = ifelse(is.na(steps), mean(steps, na.rm=TRUE), steps))
TStepNew <- aggregate(steps~date,ActivityNew,FUN=sum)
par(mfrow=c(2,1))
hist(TStep$steps,col="purple",xlab="Total Number of Steps", main="Histogram1: of Total Number of Steps/Day")
hist(TStepNew$steps,col="pink",xlab="Total Number of Steps", main="Histogram2: of Total Number of Steps/Day for New Activity Data Set")
summary(TStepNew)
View(ActivityNew)
weekEndData <- function(date) {
if (weekdays(as.Date(date)) %in% c("Saturday", "Sunday")) {
"weekend"
} else {"weekday" }}
ActivityNew$daytype <- as.factor(sapply(ActivityNew$date, weekEndData))
View(ActivityNew)
weekEndData <- function(date) {
if (weekdays(as.Date(date)) %in% c("Saturday", "Sunday")) {
"weekend"
} else {"weekday" }}
ActivityNew$Weekend/weekday <- as.factor(sapply(ActivityNew$date, weekEndData))
View(ActivityNew)
weekEndData <- function(date) {
if (weekdays(as.Date(date)) %in% c("Saturday", "Sunday")) {
"weekend"
} else {"weekday" }}
ActivityNew$Weekend Or not <- as.factor(sapply(ActivityNew$date, weekEndData))
View(ActivityNew)
weekEndData <- function(date) {
if (weekdays(as.Date(date)) %in% c("Saturday", "Sunday")) {
"weekend"
} else {"weekday" }}
ActivityNew$WeekendORnot <- as.factor(sapply(ActivityNew$date, weekEndData))
View(ActivityNew)
par(mfrow = c(2, 1))
##for (type in c("weekend", "weekday")) {    steps.type <- aggregate(steps ~ interval, data = new, subset = new$daytype == type, FUN = mean)    plot(steps.type, type = "l", main = type)    }
aggregate(steps~interval|weekEndData=="weekedn",data=ActivityNew)
##xyplot(Ozone ~ Wind | as.factor(Month), data = airquality, layout = c(5,1)) ,
par(mfrow = c(2, 1))
##for (type in c("weekend", "weekday")) {    steps.type <- aggregate(steps ~ interval, data = new, subset = new$daytype == type, FUN = mean)    plot(steps.type, type = "l", main = type)    }
aggregate(steps~interval|weekEndData=="weekend",data=ActivityNew)
##xyplot(Ozone ~ Wind | as.factor(Month), data = airquality, layout = c(5,1)) ,
par(mfrow = c(2, 1))
##for (type in c("weekend", "weekday")) {    steps.type <- aggregate(steps ~ interval, data = new, subset = new$daytype == type, FUN = mean)    plot(steps.type, type = "l", main = type)    }
aggregate(steps~interval|as.factor(weekEndData),data=ActivityNew)
##xyplot(Ozone ~ Wind | as.factor(Month), data = airquality, layout = c(5,1)) ,
par(mfrow = c(2, 1))
##for (type in c("weekend", "weekday")) {    steps.type <- aggregate(steps ~ interval, data = new, subset = new$daytype == type, FUN = mean)    plot(steps.type, type = "l", main = type)    }
head(as.factor(weekEndData))
#aggregate(steps~interval|as.factor(weekEndData),data=ActivityNew)
##xyplot(Ozone ~ Wind | as.factor(Month), data = airquality, layout = c(5,1)) ,
par(mfrow = c(2, 1))
##for (type in c("weekend", "weekday")) {    steps.type <- aggregate(steps ~ interval, data = new, subset = new$daytype == type, FUN = mean)    plot(steps.type, type = "l", main = type)    }
head(as.factor(weekEndData$weekendORnot))
#aggregate(steps~interval|as.factor(weekEndData),data=ActivityNew)
##xyplot(Ozone ~ Wind | as.factor(Month), data = airquality, layout = c(5,1)) ,
par(mfrow = c(2, 1))
##for (type in c("weekend", "weekday")) {    steps.type <- aggregate(steps ~ interval, data = new, subset = new$daytype == type, FUN = mean)    plot(steps.type, type = "l", main = type)    }
ActivityNewAggr <- aggregate(ActivityNew$steps, by = list(interval = as.factor(ActivityNew$interval)),FUN=mean, na.rm=TRUE)
aggregate(steps, by= list(as.factor(weekEndData),data=ActivityNew)
##xyplot(Ozone ~ Wind | as.factor(Month), data = airquality, layout = c(5,1)) ,
par(mfrow = c(2, 1))
##for (type in c("weekend", "weekday")) {    steps.type <- aggregate(steps ~ interval, data = new, subset = new$daytype == type, FUN = mean)    plot(steps.type, type = "l", main = type)    }
ActivityNewAggr <- aggregate(ActivityNew$steps, by = list(interval = as.factor(ActivityNew$interval)),FUN=mean, na.rm=TRUE)
##xyplot(Ozone ~ Wind | as.factor(Month), data = airquality, layout = c(5,1)) ,
View(ActivityNewAggr)
par(mfrow = c(2, 1))
##for (type in c("weekend", "weekday")) {    steps.type <- aggregate(steps ~ interval, data = new, subset = new$daytype == type, FUN = mean)    plot(steps.type, type = "l", main = type)    }
ActivityNewAggr <- aggregate(AC$steps, by = list(interval = as.factor(AC$interval)),FUN=mean, na.rm=TRUE)
##xyplot(Ozone ~ Wind | as.factor(Month), data = airquality, layout = c(5,1)) ,
rm(ActivityNewAggr)
par(mfrow = c(2, 1))
##for (type in c("weekend", "weekday")) {    steps.type <- aggregate(steps ~ interval, data = new, subset = new$daytype == type, FUN = mean)    plot(steps.type, type = "l", main = type)    }
ActivityAggr <- aggregate(AC$steps, by = list(interval = as.factor(AC$interval)),FUN=mean, na.rm=TRUE)
#plot(steps, type="1", col=)
##xyplot(Ozone ~ Wind | as.factor(Month), data = airquality, layout = c(5,1)) ,
View(ActivityAggr)
par(mfrow = c(2, 1))
##for (type in c("weekend", "weekday")) {    steps.type <- aggregate(steps ~ interval, data = new, subset = new$daytype == type, FUN = mean)    plot(steps.type, type = "l", main = type)    }
ActivityAggr <- aggregate(AC$steps, by = list(interval = as.factor(AC$interval)),FUN=mean, na.rm=TRUE)
names(ActivityAggr) <- c("interval","Average steps")
#plot(steps, type="1", col=)
##xyplot(Ozone ~ Wind | as.factor(Month), data = airquality, layout = c(5,1)) ,
View(ActivityAggr)
View(AC)
par(mfrow = c(2, 1))
##for (type in c("weekend", "weekday")) {    steps.type <- aggregate(steps ~ interval, data = new, subset = new$daytype == type, FUN = mean)    plot(steps.type, type = "l", main = type)    }
ActivityAggr <- aggregate(ActivityNew $steps, by = list(interval = as.factor(ActivityNew $interval)),FUN=mean, na.rm=TRUE)
names(ActivityAggr) <- c("interval","Average steps")
#plot(steps, type="1", col=)
##xyplot(Ozone ~ Wind | as.factor(Month), data = airquality, layout = c(5,1)) ,
View(ActivityAggr)
View(ActivityNew)
par(mfrow = c(2, 1))
##for (type in c("weekend", "weekday")) {    steps.type <- aggregate(steps ~ interval, data = new, subset = new$daytype == type, FUN = mean)    plot(steps.type, type = "l", main = type)    }
ActivityAggr <- aggregate(ActivityNew $steps, by = list(interval = as.factor(ActivityNew $daytype)),FUN=mean, na.rm=TRUE)
names(ActivityAggr) <- c("interval","Average steps")
#plot(steps, type="1", col=)
##xyplot(Ozone ~ Wind | as.factor(Month), data = airquality, layout = c(5,1)) ,
View(ActivityAggr)
par(mfrow = c(2, 1))
##for (type in c("weekend", "weekday")) {    steps.type <- aggregate(steps ~ interval, data = new, subset = new$daytype == type, FUN = mean)    plot(steps.type, type = "l", main = type)    }
ActivityAggr <- aggregate(ActivityNew $steps, by = list(interval = as.factor(ActivityNew $interval|daytype)),FUN=mean, na.rm=TRUE)
names(ActivityAggr) <- c("interval","Average steps")
#plot(steps, type="1", col=)
##xyplot(Ozone ~ Wind | as.factor(Month), data = airquality, layout = c(5,1)) ,
par(mfrow = c(2, 1))
##for (type in c("weekend", "weekday")) {    steps.type <- aggregate(steps ~ interval, data = new, subset = new$daytype == type, FUN = mean)    plot(steps.type, type = "l", main = type)    }
ActivityAggr <- aggregate(ActivityNew$steps, by = list(interval = as.factor(ActivityNew$interval)),FUN=mean, na.rm=TRUE)
names(ActivityAggr) <- c("interval","Average steps")
ActivityNew %>% split(daytype)
#rbind %>% lapply(split(ActivityNew,ActivityNew$daytype),function(Agg) Agg[hunk$Score),]))
#plot(steps, type="1", col=)
##xyplot(Ozone ~ Wind | as.factor(Month), data = airquality, layout = c(5,1)) ,
View(ActivityNew)
par(mfrow = c(2, 1))
##for (type in c("weekend", "weekday")) {    steps.type <- aggregate(steps ~ interval, data = new, subset = new$daytype == type, FUN = mean)    plot(steps.type, type = "l", main = type)    }
ActivityAggr <- aggregate(ActivityNew$steps, by = list(interval = as.factor(ActivityNew$interval)),FUN=mean, na.rm=TRUE)
names(ActivityAggr) <- c("interval","Average steps")
ActivityNew %>% split(ActivityNew,daytype)
#rbind %>% lapply(split(ActivityNew,ActivityNew$daytype),function(Agg) Agg[hunk$Score),]))
#plot(steps, type="1", col=)
##xyplot(Ozone ~ Wind | as.factor(Month), data = airquality, layout = c(5,1)) ,
par(mfrow = c(2, 1))
##for (type in c("weekend", "weekday")) {    steps.type <- aggregate(steps ~ interval, data = new, subset = new$daytype == type, FUN = mean)    plot(steps.type, type = "l", main = type)    }
ActivityAggr <- aggregate(ActivityNew$steps, by = list(interval = as.factor(ActivityNew$interval)),FUN=mean, na.rm=TRUE)
names(ActivityAggr) <- c("interval","Average steps")
ActivityNew %>% group_by(daytype)
#rbind %>% lapply(split(ActivityNew,ActivityNew$daytype),function(Agg) Agg[hunk$Score),]))
#plot(steps, type="1", col=)
##xyplot(Ozone ~ Wind | as.factor(Month), data = airquality, layout = c(5,1)) ,
par(mfrow = c(2, 1))
##for (type in c("weekend", "weekday")) {    steps.type <- aggregate(steps ~ interval, data = new, subset = new$daytype == type, FUN = mean)    plot(steps.type, type = "l", main = type)    }
ActivityAggr <- aggregate(ActivityNew$steps, by = list(interval = as.factor(ActivityNew$interval)),FUN=mean, na.rm=TRUE)
names(ActivityAggr) <- c("interval","Average steps")
AC2 <- ctivityNew %>% group_by(daytype)
#rbind %>% lapply(split(ActivityNew,ActivityNew$daytype),function(Agg) Agg[hunk$Score),]))
#plot(steps, type="1", col=)
##xyplot(Ozone ~ Wind | as.factor(Month), data = airquality, layout = c(5,1)) ,
par(mfrow = c(2, 1))
##for (type in c("weekend", "weekday")) {    steps.type <- aggregate(steps ~ interval, data = new, subset = new$daytype == type, FUN = mean)    plot(steps.type, type = "l", main = type)    }
ActivityAggr <- aggregate(ActivityNew$steps, by = list(interval = as.factor(ActivityNew$interval)),FUN=mean, na.rm=TRUE)
names(ActivityAggr) <- c("interval","Average steps")
AC2 <- ActivityNew %>% group_by(daytype)
#rbind %>% lapply(split(ActivityNew,ActivityNew$daytype),function(Agg) Agg[hunk$Score),]))
#plot(steps, type="1", col=)
##xyplot(Ozone ~ Wind | as.factor(Month), data = airquality, layout = c(5,1)) ,
View(AC2)
par(mfrow = c(2, 1))
##for (type in c("weekend", "weekday")) {    steps.type <- aggregate(steps ~ interval, data = new, subset = new$daytype == type, FUN = mean)    plot(steps.type, type = "l", main = type)    }
ActivityAggr <- aggregate(ActivityNew$steps, by = list(interval = as.factor(ActivityNew$interval)),FUN=mean, na.rm=TRUE)
names(ActivityAggr) <- c("interval","Average steps")
AC2 <- ActivityNew %>% group_by(daytype) %>% mutate(AverageSteps = mean(steps, na.rm=TRUE))
#plot(steps, type="1", col=)
##xyplot(Ozone ~ Wind | as.factor(Month), data = airquality, layout = c(5,1)) ,
View(AC2)
par(mfrow = c(2, 1))
ActivityNewAgg <- ActivityNew %>% group_by(daytype) %>% mutate(AverageSteps = mean(ActivityNew, na.rm=TRUE))
plot(ActivityNewAgg$AverageSteps, type="1", col=daytype)
##xyplot(Ozone ~ Wind | as.factor(Month), data = airquality, layout = c(5,1)) ,
par(mfrow = c(2, 1))
ActivityNewAgg <- ActivityNew %>% group_by(daytype) %>% mutate(AverageSteps = mean(ActivityNew, na.rm=TRUE))
plot(ActivityNewAgg$AverageSteps, type="1", col=ActivityNewAgg$daytype)
##xyplot(Ozone ~ Wind | as.factor(Month), data = airquality, layout = c(5,1)) ,
ActivityNewAgg <- ActivityNew %>% group_by(daytype) %>% mutate(AverageSteps = mean(ActivityNew, na.rm=TRUE))
xyplot(AverageSteps ~ interval | daytype, data = ActivityNewAgg, layout = c(2,1))
##xyplot(Ozone ~ Wind | as.factor(Month), data = airquality, layout = c(5,1)) ,
install.packages("Lattice")
install.packages("lattice")
library(dplyr)
library(lattice)
ActivityNewAgg <- ActivityNew %>% group_by(daytype) %>% mutate(AverageSteps = mean(ActivityNew, na.rm=TRUE))
xyplot(AverageSteps ~ interval | daytype, data = ActivityNewAgg, layout = c(2,1))
##xyplot(Ozone ~ Wind | as.factor(Month), data = airquality, layout = c(5,1)) ,
ActivityNewAgg <- ActivityNew %>% group_by(daytype) %>% mutate(AverageSteps = mean(ActivityNew, na.rm=TRUE))
xyplot(AverageSteps ~ interval | daytype, data = ActivityNewAgg, layout = c(1,1), col=daytype)
##xyplot(Ozone ~ Wind | as.factor(Month), data = airquality, layout = c(5,1)) ,
View(ActivityNewAgg)
View(ActivityNewAgg)
View(ActivityAggr)
rm(ActivityNew)
rm(ActivityAggr)
rm(ActivityNewAgg)
weekEndData <- function(date) {
if (weekdays(as.Date(date)) %in% c("Saturday", "Sunday")) {
"weekend"
} else {"weekday" }}
ActivityNew$WeekendORnot <- as.factor(sapply(ActivityNew$date, weekEndData))
sum(is.na(AC$steps))
ActivityNew <- AC %>% group_by(interval) %>%
mutate(steps = ifelse(is.na(steps), mean(steps, na.rm=TRUE), steps))
View(ActivityNew)
weekEndData <- function(date) {
if (weekdays(as.Date(date)) %in% c("Saturday", "Sunday")) {
"weekend"
} else {"weekday" }}
Ac$WeekendORnot <- as.factor(sapply(AC$date, weekEndData))
rm(AC2)
rm(ActivityNew)
weekEndData <- function(date) {
if (weekdays(as.Date(date)) %in% c("Saturday", "Sunday")) {
"weekend"
} else {"weekday" }}
AC$WeekendORnot <- as.factor(sapply(AC$date, weekEndData))
View(AC)
View(AC)
ActAggr <- AC %>% group_by(daytype) %>% mutate(AverageSteps = mean(AC, na.rm=TRUE))
xyplot(AverageSteps ~ interval | daytype, data = ActivityNewAgg, layout = c(1,1), col=daytype)
##xyplot(Ozone ~ Wind | as.factor(Month), data = airquality, layout = c(5,1)) ,
ActAggr <- AC %>% group_by(daytype) %>% mutate(AverageSteps = mean(AC, na.rm=TRUE))
##xyplot(AverageSteps ~ interval | daytype, data = ActivityNewAgg, layout = c(1,1), col=daytype)
##xyplot(Ozone ~ Wind | as.factor(Month), data = airquality, layout = c(5,1)) ,
View(AC)
ActAggr <- AC %>% group_by(WeekendORnot) %>% mutate(AverageSteps = mean(AC, na.rm=TRUE))
##xyplot(AverageSteps ~ interval | daytype, data = ActivityNewAgg, layout = c(1,1), col=daytype)
##xyplot(Ozone ~ Wind | as.factor(Month), data = airquality, layout = c(5,1)) ,
View(ActAggr)
ActAggr <- AC %>% group_by(WeekendORnot) %>% mutate(AverageSteps = mean(AC, na.rm=TRUE))
View(AC)
View(ActAggr)
ActAggr <- AC %>% group_by(WeekendORnot) %>% mutate(AverageSteps = mean(AC$steps, na.rm=TRUE))
##xyplot(AverageSteps ~ interval | daytype, data = ActivityNewAgg, layout = c(1,1), col=daytype)
##xyplot(Ozone ~ Wind | as.factor(Month), data = airquality, layout = c(5,1)) ,
View(ActAggr)
ActAggr <- AC %>% group_by(WeekendORnot) %>% mutate(AverageSteps = mean(steps, na.rm=TRUE))
##xyplot(AverageSteps ~ interval | daytype, data = ActivityNewAgg, layout = c(1,1), col=daytype)
##xyplot(Ozone ~ Wind | as.factor(Month), data = airquality, layout = c(5,1)) ,
View(ActAggr)
ActAggr <- AC %>% group_by(WeekendORnot)
##%>% mutate(AverageSteps = mean(steps, na.rm=TRUE))
##xyplot(AverageSteps ~ interval | daytype, data = ActivityNewAgg, layout = c(1,1), col=daytype)
##xyplot(Ozone ~ Wind | as.factor(Month), data = airquality, layout = c(5,1)) ,
View(ActAggr)
View(AC)
View(AC)
ActAggr <- AC %>% group_by(WeekendORnot)
##%>% mutate(AverageSteps = mean(steps, na.rm=TRUE))
##xyplot(AverageSteps ~ interval | daytype, data = ActivityNewAgg, layout = c(1,1), col=daytype)
##xyplot(Ozone ~ Wind | as.factor(Month), data = airquality, layout = c(5,1)) ,
View(ActAggr)
ActAggr <- AC %>% group_by(WeekendORnot)
##%>% mutate(AverageSteps = mean(steps, na.rm=TRUE))
##xyplot(AverageSteps ~ interval | daytype, data = ActivityNewAgg, layout = c(1,1), col=daytype)
##xyplot(Ozone ~ Wind | as.factor(Month), data = airquality, layout = c(5,1)) ,
View(ActAggr)
ActAggr <- AC %>% split(WeekendORnot)
##%>% mutate(AverageSteps = mean(steps, na.rm=TRUE))
##xyplot(AverageSteps ~ interval | daytype, data = ActivityNewAgg, layout = c(1,1), col=daytype)
##xyplot(Ozone ~ Wind | as.factor(Month), data = airquality, layout = c(5,1)) ,
ActAggr <- split(WeekendORnot,AC)
##%>% mutate(AverageSteps = mean(steps, na.rm=TRUE))
##xyplot(AverageSteps ~ interval | daytype, data = ActivityNewAgg, layout = c(1,1), col=daytype)
##xyplot(Ozone ~ Wind | as.factor(Month), data = airquality, layout = c(5,1)) ,
ActAggr <- split(AC$WeekendORnot,AC)
rm(ActAggr)
View(AC)
AC2 <- AC %>% group_by(WeekendORnot) %>% aggregate(steps)
AC2 <- split(AC$steps, AC$WeekendORnot, drop=FALSE)
##ActivityNew <- AC %>% group_by(interval) %>%
##  mutate(steps = ifelse(is.na(steps), mean(steps, na.rm=TRUE),steps))
##xyplot(AverageSteps ~ interval | daytype, data = ActivityNewAgg, layout = c(1,1), col=daytype)
##xyplot(Ozone ~ Wind | as.factor(Month), data = airquality, layout = c(5,1)) ,
##AC2 <- AC %>% group_by(WeekendORnot) %>% aggregate(steps)
AC2 <- split(AC$steps, AC$WeekendORnot, drop=FALSE)
##ActivityNew <- AC %>% group_by(interval) %>%
##  mutate(steps = ifelse(is.na(steps), mean(steps, na.rm=TRUE),steps))
##xyplot(AverageSteps ~ interval | daytype, data = ActivityNewAgg, layout = c(1,1), col=daytype)
##xyplot(Ozone ~ Wind | as.factor(Month), data = airquality, layout = c(5,1)) ,
AC2 <- split(AC, AC$WeekendORnot)
##xyplot(AverageSteps ~ interval | daytype, data = ActivityNewAgg, layout = c(1,1), col=daytype)
AC2 <- split(AC, AC$WeekendORnot)
AC3 <- aggregate(steps~interval, data=AC2, FUN=mean, na.rm=TRUE)
##xyplot(AverageSteps ~ interval | daytype, data = ActivityNewAgg, layout = c(1,1), col=daytype)
AC2 <- split(AC, AC$WeekendORnot)
as.data.frame(AC2)
##AC3 <- aggregate(steps~interval, data=AC2, FUN=mean, na.rm=TRUE)
##xyplot(AverageSteps ~ interval | daytype, data = ActivityNewAgg, layout = c(1,1), col=daytype)
AC2 <- split(AC, AC$WeekendORnot)
AC3 <-data.frame(AC2)
##AC3 <- aggregate(steps~interval, data=AC2, FUN=mean, na.rm=TRUE)
##xyplot(AverageSteps ~ interval | daytype, data = ActivityNewAgg, layout = c(1,1), col=daytype)
AC2 <- split(AC, AC$WeekendORnot, drop=FALSE)
AC3 <-data.frame(AC2)
##AC3 <- aggregate(steps~interval, data=AC2, FUN=mean, na.rm=TRUE)
##xyplot(AverageSteps ~ interval | daytype, data = ActivityNewAgg, layout = c(1,1), col=daytype)
AC2 <- split(AC, AC$WeekendORnot, drop=FALSE)
AC3 <- as.data.frame(AC2)
##AC3 <- aggregate(steps~interval, data=AC2, FUN=mean, na.rm=TRUE)
##xyplot(AverageSteps ~ interval | daytype, data = ActivityNewAgg, layout = c(1,1), col=daytype)
AC2 <- split(AC, AC$WeekendORnot, drop=FALSE)
AC3 <- aggregate(steps~interval, data=AC2, FUN=mean, na.rm=TRUE)
##xyplot(AverageSteps ~ interval | daytype, data = ActivityNewAgg, layout = c(1,1), col=daytype)
AC2 <- split(AC, AC$WeekendORnot, drop=FALSE)
AC3 <- aggregate(steps~interval, data=AC2$weekday, FUN=mean, na.rm=TRUE)
##xyplot(AverageSteps ~ interval | daytype, data = ActivityNewAgg, layout = c(1,1), col=daytype)
View(AC3)
View(AC3)
AC2 <- split(AC, AC$WeekendORnot, drop=FALSE)
AC3 <- aggregate(steps~interval, data=AC2$weekday, FUN=mean, na.rm=TRUE)
AC4 <- aggregate(steps~interval, data=AC2$weekend, FUN=mean, na.rm=TRUE)
par(mfrom= c(1,2))
xyplot(steps ~ interval, data = AC3, layout = c(1,1), col="green")
AC2 <- split(AC, AC$WeekendORnot, drop=FALSE)
AC3 <- aggregate(steps~interval, data=AC2$weekday, FUN=mean, na.rm=TRUE)
AC4 <- aggregate(steps~interval, data=AC2$weekend, FUN=mean, na.rm=TRUE)
par(mfrom= c(1,2))
xyplot(steps ~ interval, data = AC3, layout = c(1,1), col="green",type=1)
---
AC2 <- split(AC, AC$WeekendORnot, drop=FALSE)
AC3 <- aggregate(steps~interval, data=AC2$weekday, FUN=mean, na.rm=TRUE)
AC4 <- aggregate(steps~interval, data=AC2$weekend, FUN=mean, na.rm=TRUE)
par(mfrom= c(1,2))
plot(x= AC3$steps ~ AC3$interval, col="green",type="1")
AC2 <- split(AC, AC$WeekendORnot, drop=FALSE)
AC3 <- aggregate(steps~interval, data=AC2$weekday, FUN=mean, na.rm=TRUE)
AC4 <- aggregate(steps~interval, data=AC2$weekend, FUN=mean, na.rm=TRUE)
par(mfrow= c(1,2))
plot(x= AC3$steps ~ AC3$interval, col="green",type="1")
AC2 <- split(AC, AC$WeekendORnot, drop=FALSE)
AC3 <- aggregate(steps~interval, data=AC2$weekday, FUN=mean, na.rm=TRUE)
AC4 <- aggregate(steps~interval, data=AC2$weekend, FUN=mean, na.rm=TRUE)
par(mfrow= c(1,2))
plot(x= AC3$steps ,y= AC3$interval, col="green",type="1")
AC2 <- split(AC, AC$WeekendORnot, drop=FALSE)
AC3 <- aggregate(steps~interval, data=AC2$weekday, FUN=mean, na.rm=TRUE)
AC4 <- aggregate(steps~interval, data=AC2$weekend, FUN=mean, na.rm=TRUE)
par(mfrow= c(1,2))
plot(x= AC3$steps ,y= AC3$interval, col="green",type="l",xlab="interval", ylab="Average steps by intervals", main="Weekdays Graph")
plot(x= AC4$steps ,y= AC4$interval, col="purpel",type="l")
AC2 <- split(AC, AC$WeekendORnot, drop=FALSE)
AC3 <- aggregate(steps~interval, data=AC2$weekday, FUN=mean, na.rm=TRUE)
AC4 <- aggregate(steps~interval, data=AC2$weekend, FUN=mean, na.rm=TRUE)
par(mfrow= c(2,1))
plot(x= AC3$steps ,y= AC3$interval, col="green",type="l",xlab="interval", ylab="Average steps by intervals", main="Weekdays Graph")
plot(x= AC4$steps ,y= AC4$interval, col="purpel",type="l")
AC2 <- split(AC, AC$WeekendORnot, drop=FALSE)
AC3 <- aggregate(steps~interval, data=AC2$weekday, FUN=mean, na.rm=TRUE)
AC4 <- aggregate(steps~interval, data=AC2$weekend, FUN=mean, na.rm=TRUE)
par(mfrow= c(1,1))
plot(x= AC3$steps ,y= AC3$interval, col="green",type="l",xlab="interval", ylab="Average steps by intervals", main="Weekdays Graph")
plot(x= AC4$interval,y= AC4$steps, col="purpel",type="l")
AC2 <- split(AC, AC$WeekendORnot, drop=FALSE)
AC3 <- aggregate(steps~interval, data=AC2$weekday, FUN=mean, na.rm=TRUE)
AC4 <- aggregate(steps~interval, data=AC2$weekend, FUN=mean, na.rm=TRUE)
par(mfrow= c(1,1))
plot(x= AC3$interval ,y= AC3$steps, col="green",type="l",xlab="interval", ylab="Average steps by intervals", main="Weekdays Graph")
plot(x= AC4$interval,y= AC4$steps, col="purpel",type="l")
AC2 <- split(AC, AC$WeekendORnot, drop=FALSE)
AC3 <- aggregate(steps~interval, data=AC2$weekday, FUN=mean, na.rm=TRUE)
AC4 <- aggregate(steps~interval, data=AC2$weekend, FUN=mean, na.rm=TRUE)
par(mfrow= c(1,1))
plot(x= AC3$interval ,y= AC3$steps, col="green",type="l",xlab="interval", ylab="Average steps by intervals", main="Weekdays Graph")
plot(x= AC4$interval,y= AC4$steps, col="purple",type="l")
AC2 <- split(AC, AC$WeekendORnot, drop=FALSE)
AC3 <- aggregate(steps~interval, data=AC2$weekday, FUN=mean, na.rm=TRUE)
AC4 <- aggregate(steps~interval, data=AC2$weekend, FUN=mean, na.rm=TRUE)
par(mfrow= c(2,1))
plot(x= AC3$interval ,y= AC3$steps, col="green",type="l",xlab="interval", ylab="Average steps by intervals", main="Weekdays Graph")
plot(x= AC4$interval,y= AC4$steps, col="purple",type="l")
AC2 <- split(AC, AC$WeekendORnot, drop=FALSE)
AC3 <- aggregate(steps~interval, data=AC2$weekday, FUN=mean, na.rm=TRUE)
AC4 <- aggregate(steps~interval, data=AC2$weekend, FUN=mean, na.rm=TRUE)
par(mfrow= c(2,1))
plot(x= AC3$interval ,y= AC3$steps, col="green",type="l",xlab="interval", ylab="Average steps by intervals", main="Weekdays Graph")
plot(x= AC4$interval,y= AC4$steps, col="purple",type="l",xlab="interval", ylab="Average steps by intervals", main="Weekend Graph")
plot(x= AC4$interval,y= AC4$steps, col="purple",type="l",xlab="interval", ylab="Average steps by intervals", main="Weekend Graph")
knit2html(PA1_template.rmd)
knit2html("PA1_template.rmd")
library(dplyr)
library(lattice)
library(knitr)
knit2html("PA1_template.rmd")
rmarkdown::render("PA1_template.rmf")
rmarkdown::render("PA1_template.rmd")
install.packages("ezknitr")
library(ezknitr)
ezknit(file = "PA1_template.Rmd", out_dir = "", fig_dir = "figures")
